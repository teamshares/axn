name: CI

on:
  push:
    branches:
      - main

  pull_request:

jobs:
  main_specs:
    runs-on: ubuntu-latest
    name: Main Specs (Ruby ${{ matrix.ruby }})
    strategy:
      matrix:
        ruby:
          - '3.2.2'

    steps:
    - uses: actions/checkout@v5
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}
        bundler-cache: true
    - name: Run main specs
      run: bundle exec rake spec
    - name: Run RuboCop linting
      run: bundle exec rake rubocop

  rubocop_specs:
    runs-on: ubuntu-latest
    name: RuboCop Specs (Ruby ${{ matrix.ruby }})
    strategy:
      matrix:
        ruby:
          - '3.2.2'

    steps:
    - uses: actions/checkout@v5
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}
        bundler-cache: true
    - name: Run RuboCop specs
      run: bundle exec rake spec_rubocop

  rails_specs:
    runs-on: ubuntu-latest
    name: Rails Specs (Ruby ${{ matrix.ruby }})
    strategy:
      matrix:
        ruby:
          - '3.2.2'

    steps:
    - uses: actions/checkout@v5
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}
        bundler-cache: true
    - name: Cache dummy app bundle
      uses: actions/cache@v4
      with:
        path: spec_rails/dummy_app/vendor/bundle
        key: ${{ runner.os }}-dummy-app-bundle-${{ hashFiles('spec_rails/dummy_app/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-dummy-app-bundle-
    - name: Install dummy app dependencies
      run: |
        cd spec_rails/dummy_app
        bundle install --path vendor/bundle
    - name: Run Rails specs
      run: bundle exec rake spec_rails
